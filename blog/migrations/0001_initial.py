# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-15 13:18
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_comment', models.BooleanField(default=False)),
                ('author_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('quantity', models.CharField(max_length=10)),
                ('measurement', models.CharField(blank=True, choices=[('tbsp', 'tbsp'), ('tsp', 'tsp'), ('g', 'g'), ('kg', 'kg'), ('tsp', 'tsp'), ('ml', 'ml'), ('piece', 'piece'), ('l', 'l')], max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructions', models.TextField(blank=True, default='', null=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(help_text='Short summary for All recipes page', max_length=150, null=True)),
                ('image', versatileimagefield.fields.VersatileImageField(null=True, upload_to='post_image')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('difficulty', models.CharField(choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Difficult', 'Difficult')], max_length=10)),
                ('qty', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('cookingtime', models.CharField(default=0, help_text='Please enter time in minutes', max_length=3, verbose_name='Cooking Time')),
                ('category', models.CharField(choices=[('Vegan', 'Vegan'), ('Dessert', 'Dessert'), ('Quick', 'Quick'), ('Dinner', 'Dinner'), ('Soup', 'Soup'), ('Salad', 'Salad')], help_text='Please enter the category of your recipe. It will be displayed on All recipes page.', max_length=10, null=True)),
                ('seen', models.BigIntegerField(default=0, editable=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=300)),
                ('step_number', models.IntegerField(default=0)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='blog.Post')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profilePicture', versatileimagefield.fields.VersatileImageField(null=True, upload_to='post_image', verbose_name='Profile Picture')),
                ('birthDate', models.DateField(blank=True, help_text='Please use the following format: year-month-day', null=True, verbose_name='Date Of Birth')),
                ('description', models.TextField(default='', help_text='Tell other users about yourself', max_length=300)),
                ('height', models.IntegerField(blank=True, default=0, help_text='Please enter your height in centimeters', null=True, validators=[django.core.validators.MaxValueValidator(300), django.core.validators.MinValueValidator(0)])),
                ('weight', models.FloatField(blank=True, default=0, help_text='Please enter your weight in kilograms', null=True, validators=[django.core.validators.MaxValueValidator(300), django.core.validators.MinValueValidator(0)])),
                ('allergies', models.CharField(choices=[('Milk', 'Milk'), ('Tree nut', 'Tree nut'), ('Egg', 'Egg'), ('Wheat', 'Wheat'), ('Gluten', 'Gluten'), ('Peanut', 'Peanut'), ('Soy', 'Soy'), ('Sesame', 'Sesame'), ('Other', 'Other')], max_length=200, null=True)),
                ('vegetariantype', models.CharField(choices=[('Vegan', 'Vegan'), ('Lacto Vegetarian', 'Lacto Vegetarian'), ('Ovo Vegetarian', 'Ovo Vegetarian'), ('Lacto-ovo vegetarian', 'Lacto-ovo vegetarian')], max_length=200, null=True, verbose_name='Vegetarian Type')),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], help_text='This information is needed to calculate your daily calorie intake', max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ingredient',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='blog.Post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.Post'),
        ),
    ]
